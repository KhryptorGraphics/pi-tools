// Auto-generated by relay-compiler. Do not edit.

import Relay

public struct RecordingTabQuery {
    public var variables: Variables

    public init(variables: Variables) {
        self.variables = variables
    }

    public static var node: ConcreteRequest {
        ConcreteRequest(
            fragment: ReaderFragment(
                name: "RecordingTabQuery",
                type: "Query",
                selections: [
                    .field(ReaderScalarField(
                        name: "__typename"
                    )),
                    .clientExtension(ReaderClientExtension(
                        selections: [
                            .field(ReaderLinkedField(
                                name: "appEvents",
                                plural: true,
                                selections: [
                                    .field(ReaderScalarField(
                                        name: "id"
                                    )),
                                    .fragmentSpread(ReaderFragmentSpread(
                                        name: "AppEventRow_event"
                                    ))
                                ]
                            ))
                        ]
                    ))
                ]
            ),
            operation: NormalizationOperation(
                name: "RecordingTabQuery",
                selections: [
                    .field(NormalizationScalarField(
                        name: "__typename"
                    )),
                    .clientExtension(NormalizationClientExtension(
                        selections: [
                            .field(NormalizationLinkedField(
                                name: "appEvents",
                                plural: true,
                                selections: [
                                    .field(NormalizationScalarField(
                                        name: "__typename"
                                    )),
                                    .field(NormalizationScalarField(
                                        name: "id"
                                    )),
                                    .field(NormalizationScalarField(
                                        name: "timestamp"
                                    )),
                                    .inlineFragment(NormalizationInlineFragment(
                                        type: "BeaconEvent",
                                        selections: [
                                            .field(NormalizationScalarField(
                                                name: "action"
                                            ))
                                        ]
                                    )),
                                    .inlineFragment(NormalizationInlineFragment(
                                        type: "TripBeganEvent",
                                        selections: [
                                            .field(NormalizationLinkedField(
                                                name: "trip",
                                                concreteType: "Trip",
                                                plural: false,
                                                selections: [
                                                    .field(NormalizationScalarField(
                                                        name: "id"
                                                    ))
                                                ]
                                            ))
                                        ]
                                    )),
                                    .inlineFragment(NormalizationInlineFragment(
                                        type: "TripEndedEvent",
                                        selections: [
                                            .field(NormalizationLinkedField(
                                                name: "queuedTrips",
                                                concreteType: "Trip",
                                                plural: true,
                                                selections: [
                                                    .field(NormalizationScalarField(
                                                        name: "id"
                                                    ))
                                                ]
                                            ))
                                        ]
                                    )),
                                    .inlineFragment(NormalizationInlineFragment(
                                        type: "TripDiscardedEvent",
                                        selections: [
                                            .field(NormalizationLinkedField(
                                                name: "trip",
                                                concreteType: "Trip",
                                                plural: false,
                                                selections: [
                                                    .field(NormalizationScalarField(
                                                        name: "id"
                                                    )),
                                                    .field(NormalizationScalarField(
                                                        name: "leftAt"
                                                    )),
                                                    .field(NormalizationScalarField(
                                                        name: "returnedAt"
                                                    ))
                                                ]
                                            ))
                                        ]
                                    )),
                                    .inlineFragment(NormalizationInlineFragment(
                                        type: "RecordedTripsEvent",
                                        selections: [
                                            .field(NormalizationLinkedField(
                                                name: "recordedTrips",
                                                concreteType: "Trip",
                                                plural: true,
                                                selections: [
                                                    .field(NormalizationScalarField(
                                                        name: "id"
                                                    ))
                                                ]
                                            ))
                                        ]
                                    )),
                                    .inlineFragment(NormalizationInlineFragment(
                                        type: "RecordFailedEvent",
                                        selections: [
                                            .field(NormalizationScalarField(
                                                name: "message"
                                            ))
                                        ]
                                    ))
                                ]
                            ))
                        ]
                    ))
                ]
            ),
            params: RequestParameters(
                name: "RecordingTabQuery",
                operationKind: .query,
                text: """
query RecordingTabQuery {
  __typename
}
"""
            )
        )
    }
}

extension RecordingTabQuery {
    public typealias Variables = EmptyVariables
}



extension RecordingTabQuery {
    public struct Data: Decodable {
        public var appEvents: [AppEvent_appEvents]?

        public struct AppEvent_appEvents: Decodable, Identifiable, AppEventRow_event_Key {
            public var id: String
            public var fragment_AppEventRow_event: FragmentPointer
        }
    }
}

extension RecordingTabQuery: Relay.Operation {}