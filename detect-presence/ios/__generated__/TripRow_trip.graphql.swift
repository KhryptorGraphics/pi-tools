// Auto-generated by relay-compiler. Do not edit.

import Relay

public struct TripRow_trip {
    public var fragmentPointer: FragmentPointer

    public init(key: TripRow_trip_Key) {
        fragmentPointer = key.fragment_TripRow_trip
    }

    public static var node: ReaderFragment {
        ReaderFragment(
            name: "TripRow_trip",
            type: "Trip",
            selections: [
                .field(ReaderScalarField(
                    name: "id"
                )),
                .field(ReaderScalarField(
                    name: "leftAt"
                )),
                .field(ReaderScalarField(
                    name: "returnedAt"
                )),
                .field(ReaderScalarField(
                    name: "tags"
                ))
            ]
        )
    }
}

extension TripRow_trip {
    public struct Data: Decodable, Identifiable {
        public var id: String
        public var leftAt: String
        public var returnedAt: String?
        public var tags: [String]
    }
}

public protocol TripRow_trip_Key {
    var fragment_TripRow_trip: FragmentPointer { get }
}

extension TripRow_trip: Relay.Fragment {}

#if canImport(RelaySwiftUI)
import RelaySwiftUI

extension TripRow_trip_Key {
    public func asFragment() -> RelaySwiftUI.Fragment<TripRow_trip> {
        RelaySwiftUI.Fragment<TripRow_trip>(self)
    }
}
#endif