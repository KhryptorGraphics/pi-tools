load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")
load("@k8s_deploy//:defaults.bzl", "k8s_deploy")
load("@io_bazel_rules_k8s//k8s:object.bzl", "k8s_object")
load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")

go_library(
    name = "detect-presence-srv_lib",
    srcs = ["main.go"],
    importpath = "github.com/mjm/pi-tools/detect-presence/cmd/detect-presence-srv",
    visibility = ["//visibility:private"],
    deps = [
        "//detect-presence/checker",
        "//detect-presence/database",
        "//detect-presence/detector",
        "//detect-presence/presence",
        "//detect-presence/proto/trips",
        "//detect-presence/service/tripsservice",
        "//detect-presence/trips",
        "@com_github_improbable_eng_grpc_web//go/grpcweb",
        "@com_github_prometheus_client_golang//prometheus/promhttp",
        "@org_golang_google_grpc//:go_default_library",
    ],
)

go_binary(
    name = "detect-presence-srv",
    embed = [":detect-presence-srv_lib"],
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "detect-presence-srv_pkg",
    srcs = [
        "detect-presence.service",
        ":detect-presence-srv",
    ],
    files = {
        "presence.caddy": "sites/presence.caddy",
    },
    modes = {
        "detect-presence-srv": "0755",
        "detect-presence.service": "0644",
        "sites/presence.caddy": "0644",
    },
    visibility = ["//:__pkg__"],
)

container_image(
    name = "image",
    base = "@ubuntu_bluetooth//image",
    files = [
        ":detect-presence-srv",
    ],
    mode = "0755",
)

container_push(
    name = "image.push",
    format = "Docker",
    image = ":image",
    registry = "index.docker.io",
    repository = "mmoriarity/detect-presence-srv",
)

k8s_deploy(
    name = "k8s_deploy",
    template = "deployment.yaml",
    images = {
        "index.docker.io/mmoriarity/detect-presence-srv:latest": ":image",
    },
)

k8s_object(
    name = "k8s_service",
    kind = "service",
    template = "service.yaml",
)

k8s_object(
    name = "k8s_ingress",
    kind = "ingress",
    template = "ingress.yaml",
)

k8s_objects(
    name = "k8s",
    objects = [
        ":k8s_deploy",
        ":k8s_service",
        ":k8s_ingress",
    ],
    visibility = ["//visibility:public"],
)
