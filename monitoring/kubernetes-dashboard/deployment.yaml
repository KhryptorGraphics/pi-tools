---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: monitoring
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: monitoring
spec:
  ports:
    - port: 80
      targetPort: 9090
      protocol: TCP
  selector:
    app: kubernetes-dashboard
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: kubernetes-dashboard
  name: kubernetes-dashboard-csrf
  namespace: monitoring
type: Opaque
data: {}
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: kubernetes-dashboard
  name: kubernetes-dashboard-key-holder
  namespace: monitoring
type: Opaque
---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    app: kubernetes-dashboard
  name: kubernetes-dashboard-settings
  namespace: monitoring
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: monitoring
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kubernetes-dashboard
  template:
    metadata:
      labels:
        app: kubernetes-dashboard
    spec:
      containers:
        - name: kubernetes-dashboard
          image: kubernetesui/dashboard@sha256:4d345da62c0e33a484d755dfa7217a5521d63d325e1968c1fc81f2d491d72675 # 2.0.4
          resources:
            requests:
              cpu: "50m"
              memory: "30M"
            limits:
              memory: "50M"
          ports:
            - containerPort: 9090
              protocol: TCP
              name: http
          args:
            - --namespace=monitoring
            - --enable-insecure-login
            - --enable-skip-login
          volumeMounts:
            # Create on-disk volume to store exec logs
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              path: /
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      volumes:
        - name: tmp-volume
          emptyDir: {}
      serviceAccountName: kubernetes-dashboard
      nodeSelector:
        "kubernetes.io/os": linux
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: dashboard-metrics-scraper
  name: dashboard-metrics-scraper
  namespace: monitoring
spec:
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
  selector:
    app: dashboard-metrics-scraper
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: dashboard-metrics-scraper
  name: dashboard-metrics-scraper
  namespace: monitoring
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: dashboard-metrics-scraper
  template:
    metadata:
      labels:
        app: dashboard-metrics-scraper
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'
    spec:
      containers:
        - name: dashboard-metrics-scraper
          image: kubernetesui/metrics-scraper@sha256:fcfe994ba8dcfbfe8b166649b290de3cd2170bf1a6db02856393530c0c3430aa # 1.0.6
          ports:
            - containerPort: 8000
              protocol: TCP
              name: http
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      serviceAccountName: kubernetes-dashboard
      nodeSelector:
        "kubernetes.io/os": linux
      volumes:
        - name: tmp-volume
          emptyDir: {}
