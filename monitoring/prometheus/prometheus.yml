global:
  scrape_interval: 30s
  evaluation_interval: 30s

#alerting:
#  alertmanagers:
#    - kubernetes_sd_configs:
#        - role: endpoints
#          namespaces:
#            names:
#              - monitoring
#      scheme: http
#      path_prefix: /
#      timeout: 10s
#      relabel_configs:
#        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_label_app]
#          separator: ;
#          regex: monitoring;alertmanager
#          replacement: $1
#          action: keep
#        - source_labels: [__meta_kubernetes_endpoint_port_name]
#          separator: ;
#          regex: http
#          replacement: $1
#          action: keep

rule_files:
  - /etc/prom_rules/*.yml

scrape_configs:
  - job_name: consul-services
    consul_sd_configs:
      - {}
    relabel_configs:
      - source_labels: [__meta_consul_service_metadata_metrics_path]
        action: keep
        regex: (.+)
      - source_labels: [__meta_consul_service_metadata_metrics_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__meta_consul_service]
        action: replace
        target_label: service_name
        regex: (.+)
      - source_labels: [__meta_consul_node]
        action: replace
        target_label: node_name
        regex: (.+)

#  - job_name: kubernetes-pods
#    kubernetes_sd_configs:
#      - role: pod
#    relabel_configs:
#      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
#        action: keep
#        regex: true
#      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
#        action: replace
#        target_label: __metrics_path__
#        regex: (.+)
#      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
#        action: replace
#        regex: ([^:]+)(?::\d+)?;(\d+)
#        replacement: $1:$2
#        target_label: __address__
#      - action: labelmap
#        regex: __meta_kubernetes_pod_label_(.+)
#      - action: replace
#        source_labels: [__meta_kubernetes_namespace]
#        target_label: kubernetes_namespace
#      - action: replace
#        source_labels: [__meta_kubernetes_pod_name]
#        target_label: kubernetes_pod_name
#
#  - job_name: 'kubernetes-apiservers'
#    scrape_interval: 1m
#    kubernetes_sd_configs:
#      - role: endpoints
#    scheme: https
#    tls_config:
#      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#    relabel_configs:
#      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
#        action: keep
#        regex: default;kubernetes;https
#
#  - job_name: 'kubernetes-nodes'
#    scrape_interval: 1m
#    scheme: https
#    tls_config:
#      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#      # the node certs don't have the IP, just the hostname, but the hostname doesn't resolve in the cluster
#      insecure_skip_verify: true
#    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#    kubernetes_sd_configs:
#      - role: node
#    relabel_configs:
#      - action: labelmap
#        regex: __meta_kubernetes_node_label_(.+)
#
#  - job_name: 'kubernetes-cadvisor'
#    scrape_interval: 1m
#    scheme: https
#    metrics_path: /metrics/cadvisor
#    tls_config:
#      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#      # the node certs don't have the IP, just the hostname, but the hostname doesn't resolve in the cluster
#      insecure_skip_verify: true
#    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#    kubernetes_sd_configs:
#      - role: node
#    relabel_configs:
#      - action: labelmap
#        regex: __meta_kubernetes_node_label_(.+)
#
#  - job_name: 'blackbox-dns-public'
#    metrics_path: /probe
#    params:
#      module: [dns_public]
#    static_configs:
#      - targets:
#          - 8.8.4.4
#          - 8.8.8.8
#          - 1.0.0.1
#          - 1.1.1.1
#          - 10.0.0.2
#          - 10.0.0.3
#          - 10.0.0.4
#        labels:
#          probe_type: dns
#          probe_scope: public
#    relabel_configs:
#      - source_labels: [__address__]
#        target_label: __param_target
#      - source_labels: [__param_target]
#        target_label: instance
#      - target_label: __address__
#        replacement: blackbox-exporter:80
#
#  - job_name: 'blackbox-dns-private'
#    metrics_path: /probe
#    params:
#      module: [dns_private]
#    static_configs:
#      - targets:
#          - 10.0.0.2
#          - 10.0.0.3
#          - 10.0.0.4
#        labels:
#          probe_type: dns
#          probe_scope: private
#    relabel_configs:
#      - source_labels: [__address__]
#        target_label: __param_target
#      - source_labels: [__param_target]
#        target_label: instance
#      - target_label: __address__
#        replacement: blackbox-exporter:80
#
#  - job_name: 'blackbox-dns-private-cname'
#    metrics_path: /probe
#    params:
#      module: [dns_private_cname]
#    static_configs:
#      - targets:
#          - 10.0.0.2
#          - 10.0.0.3
#          - 10.0.0.4
#        labels:
#          probe_type: dns
#          probe_scope: private-cname
#    relabel_configs:
#      - source_labels: [__address__]
#        target_label: __param_target
#      - source_labels: [__param_target]
#        target_label: instance
#      - target_label: __address__
#        replacement: blackbox-exporter:80
#
#  - job_name: 'blackbox-kubernetes-api'
#    metrics_path: /probe
#    params:
#      module: [kube-api]
#    kubernetes_sd_configs:
#      - role: endpoints
#    relabel_configs:
#      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
#        action: keep
#        regex: default;kubernetes;https
#      - source_labels: [__address__]
#        target_label: instance
#      - source_labels: [__address__]
#        target_label: __param_target
#        replacement: https://$1/api
#      - target_label: __address__
#        replacement: blackbox-exporter:80
#
#  - job_name: 'linkerd'
#    kubernetes_sd_configs:
#      - role: pod
#        namespaces:
#          names: ['linkerd']
#    relabel_configs:
#      - source_labels:
#          - __meta_kubernetes_pod_container_name
#        action: keep
#        regex: ^prometheus$
#    honor_labels: true
#    metrics_path: '/federate'
#    params:
#      'match[]':
#        - '{job="linkerd-proxy"}'
#        - '{job="linkerd-controller"}'
